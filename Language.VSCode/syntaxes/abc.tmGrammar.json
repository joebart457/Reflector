{
	"displayName": "ABC",
	"name": "abc",
	"patterns": [
	  {
		"include": "#value"
	  }
	],
	"repository": {
	  "comments": {
		"patterns": [
		  {
			"begin": "/\\*\\*(?!/)",
			"captures": {
			  "0": {
				"name": "punctuation.definition.comment.abc"
			  }
			},
			"end": "\\*/",
			"name": "comment.block.documentation.abc"
		  },
		  {
			"begin": "/\\*",
			"captures": {
			  "0": {
				"name": "punctuation.definition.comment.abc"
			  }
			},
			"end": "\\*/",
			"name": "comment.block.abc"
		  },
		  {
			"captures": {
			  "1": {
				"name": "punctuation.definition.comment.abc"
			  }
			},
			"match": "(//).*$\\n?",
			"name": "comment.line.double-slash.abc"
		  }
		]
	  },
	  "constant": {
		"match": "\\b(?:true|false|null)\\b",
		"name": "constant.language.abc"
	  },
	  "keyword": {
		"patterns": [{ "include": "#control" }, { "include": "#usertype" }, { "include": "#type" }, { "include": "#definition" }]
	  },
	  "control": {
		"match": "\\b(if|while|return)\\b",
		"name": "keyword.control.abc"
	  },
	  "definition": {
		"match": "\\b(defn|library|import|param)\\b",
		"name": "keyword.other.abc"
	  },
	  "type": {
		"match": "\\b(type|field)\\b",
		"name": "storage.type.abc"
	  },
	  "usertype": {
		"match": "\\b(void|int|string|float|func|cfunc|ptr)\\b",
		"name": "entity.name.type.abc"
	  },
	  "number": {
		"match": "-?\\d\\d*.?\\d*(d|f)?",
		"name": "constant.numeric.abc"
	  },
	  "string": {
		"begin": "\"",
		"beginCaptures": {
		  "0": {
			"name": "punctuation.definition.string.begin.abc"
		  }
		},
		"end": "\"",
		"endCaptures": {
		  "0": {
			"name": "punctuation.definition.string.end.abc"
		  }
		},
		"name": "string.quoted.double.abc",
		"patterns": [
		  {
			"include": "#stringcontent"
		  }
		]
	  },
	  "stringcontent": {
		"patterns": [
		  {
			"match": "\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})",
			"name": "constant.character.escape.abc"
		  },
		  {
			"match": "\\\\.",
			"name": "invalid.illegal.unrecognized-string-escape.abc"
		  }
		]
	  },
	  "expression": {
          "patterns": [{ "include": "#identifier" }, { "include": "#keyword" }, { "include": "#parameter" }, { "include": "#paren-expression" }]
      },
	  "paren-expression": {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": { "name": "punctuation.paren.open" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.paren.close" }
          },
          "name": "expression.group",
          "patterns": [{ "include": "#expression" }]
       },
	  "value": {
		"patterns": [
		  {
			"include": "#constant"
		  },
		  {
			"include": "#number"
		  },
		  {
			"include": "#string"
		  },
		  {
			"include": "#comments"
		  },
		  {
			"include": "#expression"
		  }
		]
	  }
	},
	"scopeName": "source.abc"
  }